class Arrange{constructor(a){this.messagehandlers=messagehandlers={},messagehandlers.prototype.add=(a,b)=>{messagehandlers[a]||(messagehandlers[a]=[]),messagehandlers[a].push(b)},messagehandlers.prototype.remove=(a,b)=>{messagehandlers[a]&&messagehandlers[a].splice(messagehandlers[a].indexOf(b),1)},self.websocket=new WebSocket(a),self.websocket.onmessage=a=>{try{const b=JSON.parse(a.data),c=b.type;if(!c)return;if(!self[c])return;self[c].forEach(a=>{a(b)})}catch(a){}}}async addchild(a,b,c,d){return this.dorequest("addchild",{parentdatatypeid:a,parentobjectid:b,childdatatypeid:c,childobjectid:d},"onaddchild")}async createclient(a){return this.dorequest("createclient",{clientname:a},"oncreateclient")}async createdatatype(a){return this.dorequest("createdatatype",{datatypename:a},"oncreatedatatype")}async createfield(a,b,c){return this.dorequest("createfield",{datatypeid:a,fieldname:b,fieldtype:c},"oncreatefield")}async createuser(a,b,c){return this.dorequest("createuser",{clientid:c,username:a,password:b},"oncreateuser")}async deleteclient(a){return this.dorequest("deleteclient",{clientid:a},"ondeleteclient")}async deletedatatype(a){return this.dorequest("deletedatatype",{datatypeid:a},"ondeletedatatype")}async deletefield(a,b){return this.dorequest("deletefield",{datatypeid:a,fieldid:b},"ondeletedatatype")}async deleteobject(a,b){return this.dorequest("deleteobject",{datatypeid:a,objectid:b},"ondeleteobject")}async dorequest(a,b,c){var d=this.websocket,e=this.messagehandlers;return new Promise((f,g)=>{var h,i;h=setTimeout(()=>{e.remove(c,i),g()},2e3),i=a=>{clearTimeout(h),e.remove(c,i),f(a.data)},e.add(c,i),d.send(JSON.stringify({type:a,data:b}))})}async getdatatypes(){return this.dorequest("getdatatypes",null,"ongetdatatypes")}async login(a,b){return this.dorequest("login",{username:a,password:b},"onlogin")}async logout(){return this.dorequest("logout",null,"onlogout")}async saveobject(a,b){return this.dorequest("saveobject",{datatypeid:a,data:b},"onsaveobject")}static async connect(a){return new Arrange(a)}}Arrange.FIELDTYPE={text:"text",boolean:"boolean",number:"number"},module&&(module.exports.Arrange=Arrange);