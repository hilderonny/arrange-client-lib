class Arrange{constructor(a){this.websocket=io(a)}async addchild(a,b,c,d){return this.dorequest("addchild",{parentdatatypeid:a,parentobjectid:b,childdatatypeid:c,childobjectid:d},"onaddchild")}async createclient(a){return this.dorequest("createclient",{clientname:a},"oncreateclient")}async createdatatype(a){return this.dorequest("createdatatype",{datatypename:a},"oncreatedatatype")}async createfield(a,b,c){return this.dorequest("createfield",{datatypeid:a,fieldname:b,fieldtype:c},"oncreatefield")}async createuser(a,b,c){return this.dorequest("createuser",{clientid:c,username:a,password:b},"oncreateuser")}async deleteclient(a){return this.dorequest("deleteclient",{clientid:a},"ondeleteclient")}async deletedatatype(a){return this.dorequest("deletedatatype",{datatypeid:a},"ondeletedatatype")}async deletefield(a,b){return this.dorequest("deletefield",{datatypeid:a,fieldid:b},"ondeletedatatype")}async deleteobject(a,b){return this.dorequest("deleteobject",{datatypeid:a,objectid:b},"ondeleteobject")}async dorequest(a,b,c){var d=this.websocket;return new Promise(function(e,f){var g,h;g=setTimeout(function(){d.off(c,h),f()},2e3),h=function(a){clearTimeout(g),d.off(c,h),e(a)},d.on(c,h),d.emit(a,b)})}async getdatatypes(){return this.dorequest("getdatatypes",null,"ongetdatatypes")}async login(a,b){return this.dorequest("login",{username:a,password:b},"onlogin")}async logout(){return this.dorequest("logout",null,"onlogout")}async saveobject(a,b){return this.dorequest("saveobject",{datatypeid:a,data:b},"onsaveobject")}static async connect(a){return new Arrange(a)}}Arrange.FIELDTYPE={text:"text",boolean:"boolean",number:"number"};